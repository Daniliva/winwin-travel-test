version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mini_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data 
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mini_test
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      JWT_SECRET: 8fW9k3mPq7xR2vT4zY6uJ9hL5nB8mK2pQ3wE6rT9yU=
      INTERNAL_TOKEN: defaultToken
    volumes:
      - auth_logs:/app/logs  
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  data-api:
    build:
      context: ./data-api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      INTERNAL_TOKEN: defaultToken
    volumes:
      - data_logs:/app/logs  
    depends_on:
      - auth-api
    networks:
      - app-network

volumes:
  postgres_data: 
  auth_logs:      
  data_logs:     

networks:
  app-network:
    driver: bridge